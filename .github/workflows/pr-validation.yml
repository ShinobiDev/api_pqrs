# 🔍 Pull Request Validation
# Workflow simplificado para validar PRs sin deployment

name: 🔍 PR Validation

on:
  pull_request:
    branches: [ "main", "master", "develop" ]
  
env:
  PHP_VERSION: '8.2'
  APP_ENV: testing

jobs:
  # 🏃‍♂️ Quick validation for PRs
  validate:
    name: 🔍 Quick Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: pdo, mbstring, openssl, tokenizer, xml, ctype, json, bcmath, sqlite3
          tools: composer
          coverage: xdebug
      
      - name: 📦 Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-
      
      - name: 📦 Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      
      - name: 🔍 PHP Syntax Check
        run: |
          find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \;
      
      - name: 📋 Composer Validation
        run: composer validate
      
      - name: 🔒 Security Audit
        run: composer audit || echo "⚠️ Security warnings - please review"
      
      - name: ⚙️ Configure Laravel
        run: |
          cp .env.example .env.testing
          echo "APP_ENV=testing" >> .env.testing
          echo "APP_DEBUG=true" >> .env.testing
          echo "DB_CONNECTION=sqlite" >> .env.testing
          echo "DB_DATABASE=database/database.sqlite" >> .env.testing
          
          # Generate APP_KEY
          TEST_KEY=$(php -r "echo base64_encode(random_bytes(32));")
          echo "APP_KEY=base64:${TEST_KEY}" >> .env.testing
          
          # Setup database
          mkdir -p database
          touch database/database.sqlite
          
          # Clear caches and run migrations
          php artisan config:clear || true
          php artisan cache:clear || true
          php artisan migrate:fresh --seed --force --no-interaction --env=testing
      
      - name: 🧪 Run Tests with Coverage
        run: php artisan test --env=testing --coverage --min=80
      
      - name: 📊 Upload Coverage Reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: laravel
          name: pqrs-api-coverage
          fail_ci_if_error: false

  # 📝 Comment on PR with results
  pr-comment:
    name: 📝 PR Comment
    runs-on: ubuntu-latest
    needs: validate
    if: always() && github.event_name == 'pull_request'
    
    steps:
      - name: 📝 Create PR comment
        uses: actions/github-script@v6
        with:
          script: |
            const status = '${{ needs.validate.result }}';
            const emoji = status === 'success' ? '✅' : '❌';
            const message = `${emoji} **PR Validation ${status.toUpperCase()}**
            
            **Results:**
            - PHP Syntax: ${{ needs.validate.result }}
            - Security Audit: Completed
            - Tests: ${{ needs.validate.result }}
            
            ${status === 'failure' ? '⚠️ Please fix the issues before merging.' : '🎉 All checks passed! Ready for review.'}
            
            [View Details](${context.payload.pull_request.html_url}/checks)`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });